<UserControl x:Class="Wale.WPF.ConfigSet"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Wale.WPF"
             xmlns:prop="clr-namespace:Wale.WPF.Properties"
             xmlns:wale="clr-namespace:Wale;assembly=WaleBase"
             xmlns:locale="clr-namespace:Wale.Localization;assembly=Wale.Localization"
             xmlns:oxy="http://oxyplot.org/wpf"
             mc:Ignorable="d"
             x:Name="confset">
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Foreground" Value="{Binding Source={x:Static local:ColorSet.ForeColorBrush}}"/>
            <Setter Property="Background" Value="{Binding Source={x:Static local:ColorSet.BackColorBrush}}"/>

            <Setter Property="Width" Value="478"/>
            <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="MaxWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>

            <Setter Property="Height" Value="{Binding Path=ConfigSetHeight, Mode=OneWay}"/>
            <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="MaxHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=AdvancedView, Mode=OneWay}" Value="True">
                    <Setter Property="Height" Value="{Binding Path=ConfigSetLongHeight, Mode=OneWay}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <UserControl.Resources>
        
        <Style x:Key="LineItem" TargetType="Grid">
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=AdvancedView, Mode=OneWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=confset}"/>
        </Style>
        <Style x:Key="LabelDef" TargetType="Label">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=confset}"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource LabelDef}"/>
        <Style x:Key="LLastVal" TargetType="Label" BasedOn="{StaticResource LabelDef}">
            <Setter Property="Margin" Value="120,0,0,0"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <Style x:Key="RBtPriority" TargetType="RadioButton">
            <Setter Property="GroupName" Value="Priority"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=confset}"/>
        </Style>
        <Style x:Key="FinalButtons" TargetType="Button">
            <Setter Property="Width" Value="130"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="{Binding Source={x:Static local:ColorSet.ForeColorBrush}}"/>
            <Setter Property="Background" Value="{Binding Source={x:Static local:ColorSet.BackColorAltBrush}}"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <StackPanel>
            <GroupBox Header="Audio" Padding="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <Grid Style="{StaticResource LineItem}">
                            <Label Content="UI Update [ms]"/>
                            <Label Content="{Binding Path=(local:LastValues.UIUpdateInterval), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=UIUpdateInterval, Mode=TwoWay}"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible" ToolTip="Must be >=1, stable when >=15">
                            <Label Content="Auto Control [ms]"/>
                            <Label Content="{Binding Path=(local:LastValues.AutoControlInterval), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=AutoControlInterval, Mode=TwoWay}"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}">
                            <Label Content="GC Interval [ms]"/>
                            <Label Content="{Binding Path=(local:LastValues.GCInterval), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=GCInterval, Mode=TwoWay}"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <Label Content="Audio Unit" ToolTip="0=Linear(0~1), 1=dB(-&#8734;~0)"/>
                                <Label>
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=confset}"/>
                                            <Setter Property="Content" Value=" [L]"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=AudioUnit, Mode=OneWay}" Value="1">
                                                    <Setter Property="Content" Value=" [dB]"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </WrapPanel>
                            <Label Content="{Binding Path=(local:LastValues.AudioUnit), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <Slider x:Name="AudioUnitSlider" Value="{Binding Path=AudioUnit, Mode=TwoWay}">
                                <Slider.Resources>
                                    <Storyboard x:Key="Inc">
                                        <DoubleAnimation Storyboard.TargetName="AudioUnitSlider" Storyboard.TargetProperty="RangeBase.Value" Duration="0:0:0.1" To="1" BeginTime="0:0:0"/>
                                    </Storyboard>
                                    <Storyboard x:Key="Dec">
                                        <DoubleAnimation Storyboard.TargetName="AudioUnitSlider" Storyboard.TargetProperty="RangeBase.Value" Duration="0:0:0.1" To="0" BeginTime="0:0:0"/>
                                    </Storyboard>
                                </Slider.Resources>
                                <Slider.Style>
                                    <Style TargetType="Slider">
                                        <Setter Property="Width" Value="50"/>

                                        <Setter Property="Height" Value="10"/>
                                        <Setter Property="MinHeight" Value="10"/>

                                        <Setter Property="Margin" Value="0,0,6,0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>

                                        <Setter Property="Maximum" Value="1"/>
                                        <Setter Property="Minimum" Value="0"/>
                                        <Setter Property="LargeChange" Value="1"/>
                                        <Setter Property="SmallChange" Value="0.01"/>

                                        <Setter Property="TickFrequency" Value="0.01"/>
                                        <Setter Property="IsSnapToTickEnabled" Value="True"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>

                                        <Setter Property="Foreground" Value="{Binding Foreground, ElementName=confset}"/>
                                        <Setter Property="Background" Value="{Binding Background, ElementName=confset}"/>
                                    </Style>
                                </Slider.Style>
                                <Slider.Template>
                                    <ControlTemplate TargetType="Slider">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Track Grid.Row="1" x:Name="PART_Track">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Height="{TemplateBinding MinHeight}" Command="Slider.DecreaseLarge" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                                        <!--RepeatButton.Triggers>
                                                            <EventTrigger RoutedEvent="RepeatButton.Click">
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="AudioUnitSlider" Storyboard.TargetProperty="RangeBase.Value" Duration="0:0:0.1" To="0" BeginTime="0:0:0"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </RepeatButton.Triggers-->
                                                        <RepeatButton.Style>
                                                            <Style TargetType="RepeatButton">
                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="RepeatButton">
                                                                            <Border Height="{TemplateBinding Height}" BorderThickness="1" BorderBrush="Black" Background="{TemplateBinding Foreground}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Height="{TemplateBinding MinHeight}" Width="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                                        <Thumb.Style>
                                                            <Style TargetType="Thumb">
                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="Thumb">
                                                                            <Ellipse Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" StrokeThickness="1" Stroke="Black" Fill="{TemplateBinding Foreground}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Height="{TemplateBinding MinHeight}" Command="Slider.IncreaseLarge" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                                        <!--RepeatButton.Triggers>
                                                            <EventTrigger RoutedEvent="RepeatButton.Click">
                                                                <BeginStoryboard Storyboard="{StaticResource Inc}"/>
                                                            </EventTrigger>
                                                        </><!-->
                                                        <RepeatButton.Style>
                                                            <Style TargetType="RepeatButton">
                                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="RepeatButton">
                                                                            <Border Height="{TemplateBinding Height}" BorderThickness="1" BorderBrush="Black" Background="{TemplateBinding Background}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                </Slider.Template>
                            </Slider>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <Label Content="Target Level" Foreground="{Binding Source={x:Static local:ColorSet.TargetColorBrush}}"/>
                                <Label Content=" " FontSize="10"/>
                                <Label x:Name="TargetdB" Content="0" FontSize="10"/>
                                <Label Content="dB" FontSize="10"/>
                            </WrapPanel>
                            <Label Content="{Binding Path=(local:LastValues.TargetLevel), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=TargetLevel, Mode=TwoWay}" TextChanged="TargetLevel_Changed"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <Label Content="Limit Level" ToolTip="Output level that never exceed" Foreground="{Binding Source={x:Static local:ColorSet.LimitColorBrush}}"/>
                                <!--Ratio to target that will be added to target-->
                                <Label Content=" " FontSize="10"/>
                                <Label x:Name="LimitdB" Content="0" FontSize="10"/>
                                <Label Content="dB" FontSize="10"/>
                            </WrapPanel>
                            <Label Content="{Binding Path=(local:LastValues.LimitLevel), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=LimitLevel, Mode=TwoWay}" TextChanged="LimitLevel_Changed"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <Label Content="Comp Rate" ToolTip="Slightly varies from 1.0"/>
                            </WrapPanel>
                            <Label Content="{Binding Path=(local:LastValues.CompRate), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=CompRate, Mode=TwoWay}"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <Label Content="Min Peak Level"/>
                                <Label Content=" " FontSize="10"/>
                                <Label x:Name="MinPeakdB" Content="0" FontSize="10"/>
                                <Label Content="dB" FontSize="10"/>
                            </WrapPanel>
                            <Label Content="{Binding Path=(local:LastValues.MinPeak), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=MinPeak, Mode=TwoWay}"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}">
                            <Label Content="Up Rate"/>
                            <Label Content="{Binding Path=(local:LastValues.UpRate), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=UpRate, Mode=TwoWay}" TextChanged="UpRate_Changed"/>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}">
                            <Label Content="Kurtosis"/>
                            <Label Content="{Binding Path=(local:LastValues.Kurtosis), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox x:Name="KurtosisBox" Text="{Binding Path=Kurtosis, Mode=TwoWay}" TextChanged="Kurtosis_Changed"/>
                        </Grid>
                        <Grid Height="40" Style="{StaticResource LineItem}">
                            <Label Content="Function"/>
                            <Label Content="{Binding Path=(local:LastValues.VFunc), Mode=TwoWay}" Margin="60,20,0,0"/>
                            <ComboBox x:Name="FunctionSelector" HorizontalAlignment="Left" Margin="60,0,0,0" VerticalAlignment="Top" Width="150" Height="20" SelectionChanged="Function_Changed"/>
                        </Grid>

                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <oxy:PlotView x:Name="plotView" Height="170" Margin="0,0,0,2" BorderThickness="1" BorderBrush="{Binding Source={x:Static local:ColorSet.ForeColorBrush}}" Background="{Binding Background, ElementName=confset}">
                            <oxy:PlotView.Style>
                                <Style TargetType="oxy:PlotView">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=AdvancedView, Mode=OneWay}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </oxy:PlotView.Style>
                        </oxy:PlotView>

                        <!--TextBlock Text="These two options are critical for functioning of Wale" TextWrapping="Wrap"/-->
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <CheckBox Content="Auto Control Enabled" IsChecked="{Binding Path=AutoControl, Mode=TwoWay}"/>
                                <TextBlock Text="Critical" Margin="3,0" FontSize="10" Foreground="OrangeRed"/>
                            </WrapPanel>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <CheckBox Content="Static Mode" IsChecked="{Binding Path=StaticMode, Mode=TwoWay}"
                                          ToolTip="Set all apps' volume to target level"/>
                                <TextBlock Visibility="Collapsed" Text="Critical" Margin="3,0" FontSize="10" Foreground="Orange"/>
                            </WrapPanel>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <WrapPanel>
                                <CheckBox Content="Average Enabled" IsChecked="{Binding Path=Averaging, Mode=TwoWay}"/>
                                <TextBlock Visibility="Collapsed" Text="Critical" Margin="3,0" FontSize="10" Foreground="OrangeRed"/>
                            </WrapPanel>
                        </Grid>
                        <Grid Style="{StaticResource LineItem}" Visibility="Visible">
                            <Label Content="Average Time [ms]"/>
                            <Label Content="{Binding Path=(local:LastValues.AverageTime), Mode=TwoWay}" Style="{StaticResource LLastVal}"/>
                            <TextBox Text="{Binding Path=AverageTime, Mode=TwoWay}"/>
                        </Grid>
                        <!--CheckBox Content="Combine processes by app name" ToolTip="Combine session processes by application name and control them together" IsChecked="{Binding Path=CombineSession, Mode=TwoWay}"/-->
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Header="Visual" Height="114" Padding="5">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <CheckBox Content="Advanced View(F9)" IsChecked="{Binding Path=AdvancedView, Mode=TwoWay}"/>
                            <CheckBox x:Name="runAtWindowsStartup" Content="Run at Windows Startup"/>
                            <CheckBox Content="Detailed Log" IsEnabled="False"/>
                            <CheckBox Visibility="Collapsed" IsEnabled="False" x:Name="CheckForUpdateCB" Content="Check for Update"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1">
                            <CheckBox Content="Show Session Icon" IsChecked="{Binding Path=ShowSessionIcon, Mode=TwoWay}"/>
                            <Grid Visibility="Collapsed" Style="{StaticResource LineItem}">
                                <WrapPanel>
                                    <CheckBox Content="Collapse Sub Sessions" IsChecked="{Binding Path=CollapseSubSessions, Mode=TwoWay}"
                                          ToolTip="Collapse all sub sessions on session group of individual app to one"/>
                                    <TextBlock Visibility="Collapsed" Text="Critical" Margin="3,0" FontSize="10" Foreground="OrangeRed"/>
                                </WrapPanel>
                            </Grid>
                            <CheckBox Content="Show ProcessName as AppName" IsChecked="{Binding Path=PnameForAppname, Mode=TwoWay}"/>
                            <Grid Visibility="Visible" Style="{StaticResource LineItem}">
                                <WrapPanel>
                                    <CheckBox Content="Main Title in AppName" IsChecked="{Binding Path=MainTitleforAppname, Mode=TwoWay}"
                                          />
                                    <!--ToolTip="Calculation time might be longer if you activate this option"-->
                                    <TextBlock Visibility="Collapsed" Text="Caution" Margin="3,0" FontSize="10" Foreground="Orange"/>
                                </WrapPanel>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <WrapPanel>
                        <Label Content="Priority" Padding="5,0"/>
                        <RadioButton Content="Normal" IsChecked="{Binding ProcessPriorityNormal}" Style="{StaticResource RBtPriority}" Checked="Priority_RadioButton_Click"/>
                        <RadioButton Content="Above Normal" IsChecked="{Binding ProcessPriorityAboveNormal}" Style="{StaticResource RBtPriority}" Checked="Priority_RadioButton_Click"/>
                        <RadioButton Content="High" IsChecked="{Binding ProcessPriorityHigh}" Style="{StaticResource RBtPriority}" Checked="Priority_RadioButton_Click"/>
                    </WrapPanel>
                </StackPanel>
            </GroupBox>
            
            <!-- Save, Cancel -->
            <Grid>
                <Button x:Name="SaveButton" Content="Save" HorizontalAlignment="Left" Margin="10,5,0,5" Style="{StaticResource FinalButtons}" Click="ConfigSave_Click"/>
                <Grid HorizontalAlignment="Left" Margin="10,5,0,5" Width="130" Height="20" IsHitTestVisible="False">
                    <TextBlock x:Name="SavedNoti" Opacity="0" Text="Saved" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"/>
                </Grid>
                <Button Content="Return to Default" HorizontalAlignment="Center" Margin="10,5" Style="{StaticResource FinalButtons}" Click="resetToDafault_Click"/>
                <Button x:Name="CancelButton" Content="Cancel" IsEnabled="False" Visibility="Hidden" IsCancel="True" IsDefault="True" HorizontalAlignment="Right" Margin="0,5,10,5" Style="{StaticResource FinalButtons}" Click="Cancel_Click"/>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
