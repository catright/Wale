<Window x:Name="window" x:Class="Wale.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Wale.WPF"
        xmlns:ui="clr-namespace:Wale.WPF.UIDefinitions"
        xmlns:wale="clr-namespace:Wale;assembly=WaleBase"
        xmlns:conf="clr-namespace:Wale.Configs;assembly=WaleBase"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:locale="clr-namespace:Wale.Localization;assembly=Wale.Localization"
        d:DataContext="{d:DesignInstance Type=conf:General}"
        mc:Ignorable="d" Icon="Icon/WaleLeftOn.ico" ShowInTaskbar="False" WindowStyle="None" ResizeMode="NoResize"
        Deactivated="Window_Deactivated" MouseMove="Window_MouseMove" MouseUp="Window_MouseUp">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UIDefinitions/UIRD_Main.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
            <Setter Property="Background" Value="{x:Static local:ColorSet.BackColorBrush}"/>
            <Setter Property="Width" Value="{x:Static conf:Visual.MainWindowWidth}"/>
            <Setter Property="MaxWidth" Value="{Binding Width, RelativeSource={RelativeSource self}}"/>
            <Setter Property="Height" Value="285"/>
            <Setter Property="MinHeight" Value="{x:Static conf:Visual.MainWindowHeightDefault}"/>
            <Setter Property="Topmost" Value="{Binding AlwaysTop}"/>
        </Style>
    </Window.Style>
    <Window.ContextMenu>
        <ContextMenu x:Name="MainContext">
            <MenuItem Header="{Binding Configuration, Source={x:Static locale:Interpreter.Current}}" Click="ConfigToolStripMenuItem_Click"/>
            <MenuItem Header="{Binding DeviceMap, Source={x:Static locale:Interpreter.Current}}" Click="DeviceMapToolStripMenuItem_Click"/>
            <MenuItem Header="{Binding AboutWale, Source={x:Static locale:Interpreter.Current}}">
                <MenuItem Header="{Binding OpenLog, Source={x:Static locale:Interpreter.Current}}" Click="OpenLogDirectoryToolStripMenuItem_Click"/>
                <MenuItem Header="{Binding Help, Source={x:Static locale:Interpreter.Current}}" Click="HelpToolStripMenuItem_Click"/>
                <MenuItem Header="{Binding License, Source={x:Static locale:Interpreter.Current}}" Click="LicensesToolStripMenuItem_Click"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{Binding WindowsSoundSetting, Source={x:Static locale:Interpreter.Current}}" Click="WindowsSoundSetting_Click"/>
            <MenuItem Header="{Binding WindowsVolumeMixer, Source={x:Static locale:Interpreter.Current}}" Click="WindowsVolumeMixer_Click"/>
            <Separator/>
            <MenuItem Header="{Binding Restart, Source={x:Static locale:Interpreter.Current}}" Click="OnProgramRestart"/>
            <MenuItem Header="{Binding Exitxml, Source={x:Static locale:Interpreter.Current}}" Click="OnProgramShutdown"/>
        </ContextMenu>
    </Window.ContextMenu>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCDevShow}" Executed="DevShow_CommandBinding_Executed"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCMasterTab}" Executed="ShiftToMasterTab"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCSessionTab}" Executed="ShiftToSessionTab"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCLogTab}" Executed="ShiftToLogTab"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCAlwaysTop}" Executed="ChangeAlwaysTop"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCStayOn}" Executed="ChangeStayOn"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCDetail}" Executed="ChangeDetailView"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.SCChangeUnit}" Executed="ChangeAudioUnit"/>
    </Window.CommandBindings>

    <Grid>
        <Grid Height="36" VerticalAlignment="Top" Background="{x:Static local:ColorSet.MainColorBrush}"
              MouseDown="TitlePanel_MouseDown">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="99*"/>
                <ColumnDefinition Width="*" MinWidth="{Binding ActualWidth, ElementName=AppUpdateMsg}"/>
            </Grid.ColumnDefinitions>
            <WrapPanel Grid.Column="0">
                <Image HorizontalAlignment="Left" Margin="10,5,10,5" Height="26" Width="26" Source="{Binding Icon, ElementName=window}">
                <Image.Effect>
                    <DropShadowEffect BlurRadius="15" Color="White" Direction="60" Opacity="0.5"/>
                </Image.Effect>
            </Image>
                <TextBlock Text="{Binding Path=AppTitle}" Style="{StaticResource TBlockTitleDef}"/>
                <TextBlock Text=" [" Visibility="{Binding ACDevShow}" Style="{StaticResource TBlockTitleDef}"/>
                <TextBlock Text="{Binding SubVersion}" Visibility="{Binding ACDevShow}" Style="{StaticResource TBlockTitleDef}"/>
                <TextBlock Text="]" Visibility="{Binding ACDevShow}" Style="{StaticResource TBlockTitleDef}"/>
            </WrapPanel>
            <WrapPanel Grid.Column="1" VerticalAlignment="Bottom">
                <TextBlock x:Name="AppUpdateMsg" Text="New Version Detected" Visibility="{Binding AppUpdateMsg}" ToolTip="{Binding UpdateLink}" TextDecorations="Underline" Padding="2,3" HorizontalAlignment="Right"/>
            </WrapPanel>
        </Grid>

        <TabControl x:Name="Tabs" TabStripPlacement="Bottom" Margin="0,36,0,0" Padding="0" SnapsToDevicePixels="True" Background="Transparent" SelectionChanged="Tabs_SelectionChanged" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <TabItem Header="{Binding View, Source={x:Static locale:Interpreter.Current}}" Style="{DynamicResource TItemDef}">
                <Grid MouseLeftButtonDown="MasterPanel_MouseDown">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="195"/>
                        <ColumnDefinition MinWidth="0"/>
                        <ColumnDefinition MinWidth="280"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel x:Name="MasterPanel" Grid.Column="0" MouseWheel="MasterTab_MouseWheel">
                        <StackPanel Margin="5,5,5,0">
                            <Grid>
                                <Label Content="{Binding Target, Source={x:Static locale:Interpreter.Current}}" HorizontalAlignment="Left" Style="{StaticResource LDef}"/>
                                <Grid HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="TargetLabel" Content="0" HorizontalAlignment="Right" Grid.Column="0" Foreground="{x:Static local:ColorSet.TargetColorBrush}" Style="{StaticResource LDef}"/>
                                    <Label x:Name="LimitLabel" Content="0" HorizontalAlignment="Right" Grid.Column="2" Foreground="{x:Static local:ColorSet.LimitColorBrush}" Style="{StaticResource LDef}"/>
                                </Grid>
                            </Grid>
                            <ui:SliderMain x:Name="BaseSlider" Value="{Binding Path=TargetLevel, Mode=TwoWay}" Foreground="{x:Static local:ColorSet.TargetColorBrush}" Background="{x:Static local:ColorSet.BackColorAltBrush}" Style="{DynamicResource SliderBaseSlider}" ValueChanged="TargetSlider_ValueChanged"/>
                            <ui:SliderMain x:Name="LimitSlider" Value="{Binding Path=LimitLevel, Mode=TwoWay}" Foreground="{x:Static local:ColorSet.LimitColorBrush}" Background="{x:Static local:ColorSet.BackColorAltBrush}" Style="{DynamicResource SliderBaseSlider}" ValueChanged="LimitSlider_ValueChanged"/>
                        </StackPanel>
                        <WrapPanel Margin="5,5,5,0">
                            <Label Content="{Binding Device, Source={x:Static locale:Interpreter.Current}}" Margin="0,0,5,0" Style="{StaticResource LDef}"/>
                            <TextBlock Text="{Binding CurrentDevice}" ToolTip="{Binding CurrentDeviceLong}" TextWrapping="Wrap"/>
                        </WrapPanel>
                        <StackPanel Margin="5,5,5,0">
                            <Grid>
                                <Label Content="{Binding Master, Source={x:Static locale:Interpreter.Current}}"
                                       MouseDown="MasterLabel_MouseDown">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                            <Setter Property="Opacity" Value="1"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Audio.MasterMuted, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                                <WrapPanel HorizontalAlignment="Right">
                                    <WrapPanel.Resources>
                                        <Style TargetType="Label">
                                            <Setter Property="Width" Value="35"/>
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                        </Style>
                                    </WrapPanel.Resources>
                                    <Label x:Name="MasterLabel" d:Content="0" Foreground="{x:Static local:ColorSet.VolumeColorBrush}">
                                        <Label.Content>
                                            <MultiBinding Converter="{StaticResource LvConv}" Mode="OneWay">
                                                <Binding Path="AudioUnit"/>
                                                <Binding Path="Audio.MasterVolume" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                            </MultiBinding>
                                        </Label.Content>
                                    </Label>
                                    <Label x:Name="MasterPeakLabel" d:Content="0" Foreground="{x:Static local:ColorSet.PeakColorBrush}">
                                        <Label.Content>
                                            <MultiBinding Converter="{StaticResource LvConv}" Mode="OneWay">
                                                <Binding Path="AudioUnit"/>
                                                <Binding Path="Audio.MasterPeak" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                <Binding Path="Audio.MasterVolume" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                            </MultiBinding>
                                        </Label.Content>
                                    </Label>
                                </WrapPanel>
                            </Grid>
                            <ui:SliderMain Value="{Binding Audio.MasterVolume, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay}" Foreground="{x:Static local:ColorSet.VolumeColorBrush}" Background="{x:Static local:ColorSet.BackColorAltBrush}" Style="{DynamicResource SliderBaseSlider}"/>
                            <ProgressBar Style="{DynamicResource PBarDef}" Foreground="{x:Static local:ColorSet.PeakColorBrush}">
                                <ProgressBar.Value>
                                    <MultiBinding Converter="{StaticResource LvConv}" Mode="OneWay" ConverterParameter="-1">
                                        <Binding Path="AudioUnit"/>
                                        <Binding Path="Audio.MasterPeak" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                        <Binding Path="Audio.MasterVolume" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                    </MultiBinding>
                                </ProgressBar.Value>
                            </ProgressBar>
                        </StackPanel>
                        <Grid Margin="5,5,5,0" IsEnabled="False" Width="0" Height="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" MinWidth="35"/>
                                <ColumnDefinition Width="99*" MinWidth="80"/>
                                <ColumnDefinition Width="1*" MinWidth="66"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="VolumeStepBox" Grid.Column="0" TextWrapping="Wrap" Text="{Binding Path=MasterVolumeStep, Mode=TwoWay}" Style="{DynamicResource TBoxDef}"/>
                            <TextBox x:Name="TargetVolumeBox" Grid.Column="1" TextWrapping="Wrap" KeyDown="TargetVolumeBox_KeyDown">
                                <TextBox.Style>
                                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                            <Style.Resources>
                                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                                    <VisualBrush.Visual>
                                                        <Label Content="Target Volume" Foreground="{Binding Source={x:Static local:ColorSet.ForeColorAltBrush}}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Style.Resources>
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                    <Setter Property="Background" Value="{x:Static local:ColorSet.BackColorBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                            </TextBox>
                            <Button Content="Set Volume" Grid.Column="2" Padding="2,0" Background="Transparent" Foreground="{x:Static local:ColorSet.ForeColorBrush}">
                                <Button.Effect>
                                    <DropShadowEffect ShadowDepth="2" BlurRadius="2"/>
                                </Button.Effect>
                            </Button>
                        </Grid>
                        <WrapPanel Margin="5,5,5,0">
                            <CheckBox Content="{Binding AlwaysTop, Source={x:Static locale:Interpreter.Current}}" IsChecked="{Binding AlwaysTop}" Style="{DynamicResource CBocMain}"/>
                            <CheckBox Content="{Binding StayOn, Source={x:Static locale:Interpreter.Current}}" IsChecked="{Binding StayOn}" Style="{DynamicResource CBocMain}"/>
                            <CheckBox Content="{Binding AdvancedView, Source={x:Static locale:Interpreter.Current}}" IsChecked="{Binding AdvancedView}" Style="{DynamicResource CBocMain}"/>
                        </WrapPanel>
                        <!--Dev panel i-->
                        <Border Visibility="{Binding ACDevShow}" Margin="0,2" Padding="0"
                                BorderBrush="{Binding Source={x:Static local:ColorSet.ForeColorAltBrush}}" BorderThickness="1">
                            <StackPanel Margin="0">
                                <WrapPanel Margin="0">
                                    <Label Content="AC Elapsed" Padding="10,0,0,0" Width="80" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <TextBlock Text="{Binding ACElapsed}" Padding="5,0,0,0" Width="50" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <Label Content="[ms]" Padding="0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                </WrapPanel>
                                <WrapPanel Margin="0">
                                    <Label Content="AC Waited" Padding="10,0,0,0" Width="80">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource ACwaitedConverter}">
                                                                <Binding Path="ACWaited"/>
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <TextBlock Text="{Binding ACWaited}" Padding="5,0,0,0" Width="50">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource ACwaitedConverter}">
                                                                <Binding Path="ACWaited"/>
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Label Content="[ms]" Padding="0">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource ACwaitedConverter}">
                                                                <Binding Path="ACWaited"/>
                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </WrapPanel>
                                <WrapPanel Margin="0">
                                    <Label Content="AC W-I diff" ToolTip="Waited-Interval difference" Padding="10,0,0,0" Width="80">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ACEWdif, Converter={StaticResource WIdifConverter}, ConverterParameter=2}" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <TextBlock Text="{Binding ACEWdif}" Padding="5,0,0,0" Width="50">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ACEWdif, Converter={StaticResource WIdifConverter}, ConverterParameter=2}" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Label Content="[ms]" Padding="0">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ACEWdif, Converter={StaticResource WIdifConverter}, ConverterParameter=2}" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </WrapPanel>
                                <WrapPanel>
                                    <Label Content="Cnt:" Padding="10,0,0,0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <TextBlock Text="{Binding ACAvCnt}" Padding="5,0,0,0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <Label Content="f:&lt;" Padding="10,0,0,0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <TextBlock Text="{Binding ACHz}" Padding="0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <Label Content="hz" Padding="0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                    <Label Content="10ms:50hz" FontSize="9" Padding="2,0,0,0" Foreground="{x:Static local:ColorSet.ForeColorBrush}"/>
                                </WrapPanel>
                            </StackPanel>
                        </Border>
                        <!--Dev panel f-->
                    </StackPanel>
                    <StackPanel x:Name="SessionPanel" Grid.Column="2">
                        <!--<local:MeterSet/>-->
                        <!--<local:MeterSet/>-->
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="ConfTab" Header="{Binding Config, Source={x:Static locale:Interpreter.Current}}" Style="{DynamicResource TItemDef}">
                <local:ConfigSet/>
            </TabItem>
            <TabItem Header="{Binding Log, Source={x:Static locale:Interpreter.Current}}" Style="{DynamicResource TItemDef}" GotFocus="Logs_VisibleChanged">
                <Grid>
                    <ScrollViewer x:Name="LogScroll" local:KineticBehaviour.HandleKineticScrolling="True">
                        <ScrollViewer.Style>
                            <Style TargetType="ScrollViewer">
                                <d:Setter Property="Content" Value="1TEST&#10;2&#10;3&#10;4&#10;5&#10;6&#10;7&#10;8&#10;9&#10;T&#10;11&#10;12&#10;13&#10;14&#10;15&#10;"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="Foreground" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                <Setter Property="BorderBrush" Value="{x:Static local:ColorSet.ForeColorAltBrush}"/>
                                <Setter Property="Background" Value="{x:Static local:ColorSet.ForeColorBrush}"/>
                                <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate}"/>
                            </Style>
                        </ScrollViewer.Style>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
